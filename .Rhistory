q()
LinRegData <- read.csv(file = "C:/Users/Alekh/Documents/Learn/Business Analytics eduPristine/Anand/Instructor/Linear_Reg_Sample_Data.csv")
summary(LinRegData)
x <- read.csv(file = "C:/Users/Alekh/Documents/Learn/Business Analytics eduPristine/Anand/Instructor/Linear_Reg_Sample_Data.csv")
summary(x)
results = lm(Capped_Losses ~ Number_Vehicles, x)
results
summary(results)
summary(results)
results # gives mini summary
summary(results)
results = lm(formula = Capped_Losses ~ Number_Vehicles, data = x)
results # gives mini summary
summary(results)
x[1,]
results = lm(Capped_Losses ~ Fuel_Type_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age, x)x[1,]
x[1,]
results = lm(Capped_Losses ~ Policy.Number, x)x[1,]
results = lm(Capped_Losses ~ Policy.Number, x)
results = lm(Capped_Losses ~ Fuel_Type_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age, x)
summary(results)
x[1,]
results = lm(Capped_Losses ~ Average_Age + Gender_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age, x)
summary(results)
results = lm(Capped_Losses ~ Gender_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age + Gender_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Policy.Number, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age + Gender_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age + Gender_Dummy + Policy.Number, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age + Gender_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Average_Age + Gender_Dummy, x)
summary(results)
??lm
??lm
summary(results)
summary(results)x[
x[1,]'
'
x[1,]
t(x[1,])
results = lm(Capped_Losses ~ + Policy.Number+ Years_Drv_Exp+ Number_Vehicles+ Average_Age+ Gender_Dummy+ Married_Dummy+ Avg_Veh_Age+ Fuel_Type_Dummy+ Losses+ Capped_Losses, x)
results = lm(Capped_Losses ~ Policy.Number+ Years_Drv_Exp+ Number_Vehicles+ Average_Age+ Gender_Dummy+ Married_Dummy+ Avg_Veh_Age+ Fuel_Type_Dummy+ Losses+ Capped_Losses, x)
results = lm(Capped_Losses ~ Years_Drv_Exp + Number_Vehicles + Average_Age, x)
results = lm(Capped_Losses ~ Years_Drv_Exp + Number_Vehicles + Average_Age + Gender_Dummy + Married_Dummy, x)
summary(results)
results = lm(Capped_Losses ~ Years_Drv_Exp + Number_Vehicles + Average_Age + Gender_Dummy + Married_Dummy + Avg_Veh_Age, x)
summary(results)
results
results = lm(Capped_Losses ~ Years_Drv_Exp + Number_Vehicles + Average_Age + Gender_Dummy + Married_Dummy + Avg_Veh_Age + Fuel_Type_Dummy , x)
summary(results)
results = lm(Capped_Losses ~ Average_Age + Gender_Dummy + Married_Dummy + Avg_Veh_Age + Fuel_Type_Dummy , x)
summary(results)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
summary(x)
summary(x)
ch")
library("lmtest")
library("sandwich")
library("lmtest")
library("sandwich")
library("lmtest")
LinRegData <- read.csv(file = "D:\\Anand\\Personal\\Pristine\\Business Analytics-November 2013-Pune\\Day3&4_LinearRegression\\Linear_Regression_Excel_n_R_Material\\Excel\\Instructor\\Linear_Reg_Sample_Data.csv")
summary(LinRegData)
LinRegData <- read.csv(file = "D:\\Anand\\Personal\\Pristine\\Business Analytics-November 2013-Pune\\Day3&4_LinearRegression\\Linear_Regression_Excel_n_R_Material\\Excel\\Instructor\\Linear_Reg_Sample_Data.csv")
FitLinReg <- lm(Capped_Losses ~ Number_Vehicles + Average_Age + Gender_Dummy + Married_Dummy + Avg_Veh_Age + Fuel_Type_Dummy,  LinRegData)
LinRegData <- read.csv(file = "C:\\Linear_Reg_Sample_Data.csv")
summary(LinRegData)
FitLinReg <- lm(Capped_Losses ~ Number_Vehicles + Average_Age + Gender_Dummy + Married_Dummy + Avg_Veh_Age + Fuel_Type_Dummy,  LinRegData)
summary(FitLinReg)
FitLinReg <- lm(Capped_Losses ~ Average_Age + Gender_Dummy + Married_Dummy + Avg_Veh_Age + Fuel_Type_Dummy,  LinRegData)
summary(FitLinReg)
vcovHC(FitLinReg,omega=NULL, type="HC4")
coeftest(FitLinReg, df = Inf,vcovHC(FitLinReg,omega=NULL, type="HC4"))
q()
default.data <- read.csv(file="C:/Users/Alekh/Documents/Learn/Business Analytics eduPristine/Day5&6_Logestic-Regression/work/Dec7Data10.csv")
default.data
size(default.data)
default.data
ststr(data.default)
str(default.data)
help(read)
help(read.table)
structure(default.data)
head(default.data)
?structure
attributes(default.data)
data.function[1,]
data.function(1,)
data.function[1,1]
data.default[1,]
data.default(1,)
data.default(1,)dd
default.data[1,]
default.data[1,1]
default.data[,1]
type(default.data[,1])
typeof(default.data[,1])
typeof(default.data[,1]).type
typeof(default.data)
typeof(default.data[1,])
typeof(default.data[,1])
typeof(default.data[,2])
typeof(default.data[,3])
typeof(default.data[,4])
typeof(default.data[,5])
typeof(default.data[,6])
typeof(default.data[,7])
typeof(default.data[,8])
typeof(default.data[,9])
typeof(default.data[,9]
default.data[1,]
table(default.data$Duration_in_Months)
table(default.data$Default_On_Payment)
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
q()
Data00 <- read.csv("C:/Users/Alekh/Documents/Learn/Business Analytics eduPristine/Day5&6_Logistic-Regression/Logistic_Regression_R_Material/Excel/Instructor/Analysis_of_Default.csv")
DATA00
DAata00
Data00
size(Data00)
length(Data00)
length(Data00)
breadth(Data00)
dim(Data00)
lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy, data = DefaultData)
lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy, data = Data00)
View(Data00)
LinRegData = lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy, data = Data00)
LinRegData
lmOutput = lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy, data = Data00)
?lm
lmOutput
summary(lmOutput)
summary(Data00)
mmary(lmOutput)
summary(lmOutput)
lmOutput = lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2  + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy3 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr10_Dummy2 + Attr12_Dummy1 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr19_Dummy, data = Data00)
summary(lmOutput)
lmOutput = lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2  + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy3 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr10_Dummy2 + Attr12_Dummy1 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr19_Dummy, data = Data00)
summary(lmOutput)
lmOutput = lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy, data = Data00)
summary(lmOutput)
lmOutput = lm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2  + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy3 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr10_Dummy2 + Attr12_Dummy1 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr19_Dummy, data = Data00)
summary(lmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy,  family = binomial(logit), data = Data00)
summary(lmOutput)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2  + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy3 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr10_Dummy2 + Attr12_Dummy1 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr19_Dummy,family = binomial(logit),  data = Data00)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy,  family = binomial(logit), data = Data00)
summary(glmOutput)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy,  family = binomial(logit), data = Data00)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans +  Attr3_dummy2 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 +  Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy3 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy2 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr19_Dummy,  family = binomial(logit), data = Data00)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy,  family = binomial(logit), data = Data00)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans +  Attr3_dummy2 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 +  Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy3 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy2 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr19_Dummy,  family = binomial(logit), data = Data00)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans + Attr3_dummy1 + Attr3_dummy2 +    Attr3_dummy3 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 + Attr4_Dummy4 + Attr4_Dummy5 + Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy1 + Attr6_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy1 + Attr7_Dummy2 + Attr7_Dummy3 + Attr7_Dummy4 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy1 + Attr10_Dummy2 + Attr11 + Attr12_Dummy1 +  Attr12_Dummy2 + Attr12_Dummy3 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr17_Dummy1 + Attr17_Dummy2 + Attr17_Dummy3 + Attr18 + Attr19_Dummy,  family = binomial(logit), data = Data00)
summary(glmOutput)
glmOutput = glm(Default_On_Payment ~ Attr1_Dummy1 + Attr1_Dummy2 + Attr1_Dummy3 + Attr2_Trans +  Attr3_dummy2 + Attr3_dummy4 + Attr4_Dummy1 + Attr4_Dummy2 + Attr4_Dummy3 +  Attr4_Dummy6 +    Attr5_Dummy1 + Attr5_Dummy2 + Attr6_Dummy3 + Attr6_Dummy4 + Attr7_Dummy3 + Attr8 + Attr9_Dummy1 + Attr9_Dummy2 + Attr9_Dummy3 + Attr10_Dummy2 + Attr13 + Attr14_Dummy + Attr15_Dummy + Attr16 + Attr19_Dummy
+ Attr3_dummy1 + Attr3_dummy3 + Attr6_Dummy2 + Attr12_Dummy1 + Attr18
,  family = binomial(logit), data = Data00)
summary(glmOutput)
q()
q()
vif(glmOutput)
summary(glmOutput)
?vif
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
vif(glmOutput)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
vif(glmOutput)
q()
View(default.data)
sa <- read.csv("C:/csv/sales.csv", header=T)
summary(sa)
# R Script for Time Series Class - Anand Sabale
#######################################################
# Load the data
sa <- read.csv("C:/csv/sales.csv", header=T)
# Check basic properties of this data set
summary(sa)
# Plot ACF and PACF charts
acf(sa)
pacf(sa)
# Model selection
# arima (data,nonseasonal specification, seasonal specification)
arima(sa,order= c(1,1,1))
arima(sa,order= c(2,1,2))
arima(sa,order= c(1,1,0))
arima(sa,order= c(0,1,1))
# Fit seasonal models
arima(sa,seasonal = list(order = c(1,1,1), period = NA))
arima(sa,seasonal = list(order = c(2,1,2), period = NA))
arima(sa,seasonal = list(order = c(2,2,2), period = NA))
arima(sa,seasonal = list(order = c(2,2,2), period = NA))
arima(sa,seasonal = list(order = c(1,2,1), period = NA)) # this is a good model
arima(sa,seasonal = list(order = c(2,0,2), period = NA))
arima(sa,seasonal = list(order = c(1,0,1), period = NA))
# Select the quarterly seasonlity
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
# Model Estimation
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
# Model Validation/Diagnostic
tsdiag(fit)
Box.test(fit$residuals,lag=5)
# Null Hypothesis is Errors are non random -> as p value is low, there is no confidence in this analysis
# That means errors are random - which is required case for good model
# Forecasting
predict(fit,n.ahead=8)
acf(sa)
?acf
pacf(sa)
arima(sa,order= c(1,1,1))
arima(sa,order= c(2,1,2))
arima(sa,order= c(1,1,0))
arima(sa,seasonal = list(order = c(1,1,1), period = NA))
arima(sa,seasonal = list(order = c(2,1,2), period = NA))
arima(sa,seasonal = list(order = c(2,2,2), period = NA))
arima(sa,seasonal = list(order = c(2,2,2), period = NA))
arima(sa,seasonal = list(order = c(1,2,1), period = NA)) # this is a good model
arima(sa,seasonal = list(order = c(2,0,2), period = NA))
arima(sa,seasonal = list(order = c(1,0,1), period = NA))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
tsdiag(fit)
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 3))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 3))
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
Box.test(fit$residuals,lag=5)
predict(fit,n.ahead=8)
acf(sa)
pacf(sa)
acf(sa)
pacf(sa)
arima(sa,order= c(1,1,1))
arima(sa,order= c(1,1,1))
acf(sa)
pacf(sa)
arima(sa,order= c(1,1,1))
arima(sa,order= c(2,1,2))
tsdiag(fit)
Box.test(fit$residuals,lag=5)
arima(sa,order= c(1,1,1))
arima(sa,order= c(2,1,2))
arima(sa,order= c(1,1,0))
arima(sa,order= c(0,1,1))
arima(sa,seasonal = list(order = c(1,1,1), period = NA))
arima(sa,seasonal = list(order = c(1,1,1), period = NA))
arima(sa,seasonal = list(order = c(2,1,2), period = NA))
arma(sa,order= c(1,1,1))
arima(sa,order= c(1,0,1))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
arima(sa,seasonal = list(order = c(1,0,1), period = NA))
arima(sa,seasonal = list(order = c(1,1,1), period = NA))
arima(sa,seasonal = list(order = c(2,2,2), period = NA))
arima(sa,seasonal = list(order = c(2,2,2), period = NA))
arima(sa,seasonal = list(order = c(1,1,1), period = NA))
arima(sa,seasonal = list(order = c(2,2,2), period = NA))
arima(sa,order= c(0,1,1))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 1, 1), period = 4))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
arima(sa, order = c(2, 2, 2), seasonal = list(order = c(1, 2, 1), period = 4))
arima(sa, order = c(2, 2, 2), seasonal = list(order = c(2, 2, 2), period = 4))
arima(sa, order = c(2, 2, 2), seasonal = list(order = c(2, 3, 2), period = 4))
arima(sa, order = c(2, 2, 2), seasonal = list(order = c(2, 4, 2), period = 4))
, 1), period = 4))
arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
fittmp<-arima(sa,seasonal = list(order = c(2,2,2), period = NA))
Box.test(fittmp$residuals,lag=5)
fittmp<-arima(sa,seasonal = list(order = c(1,1,1), period = NA))
Box.test(fittmp$residuals,lag=5)
Box.test(fit$residuals,lag=4)
Box.test(fit$residuals,lag=5)
Box.test(fit$residuals,lag=6)
Box.test(fit$residuals,lag=5)
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
Box.test(fit$residuals,lag=5)
fit<-arima(sa, order = c(1, 1, 1), seasonal = list(order = c(1, 2, 1), period = 4))
tsdiag(fit)
Box.test(fit$residuals,lag=5)
predict(fit,n.ahead=8)
Box.test(fit$errors,lag=5)
Box.test(fit$error,lag=5)
Box.test(fit_error$residuals,lag=5)
sa <- read.csv("C:/csv/sales.csv", header=T)
ts_obj = ts(sa, start=c(2002,1), frequency =12)
plot(ts_obj)
data_decom = decompose(ts_obj)
seasonal_com = data_decom$seasonal
plot(seasonal_com)
plot(data_decom)
seasonal_com = data_decom$seasonal
plot(seasonal_com)
trend_com = data_decom$trend
plot(trend_com)
random_com = data_decom$random
plot(data_decom)
seasonal_com = data_decom$seasonal
plot(ts_obj)
data_decom = decompose(ts_obj)
seasonal_com = data_decom$seasonal
plot(seasonal_com)
trend_com = data_decom$trend
plot(trend_com)
random_com = data_decom$random
plot(data_decom)
acf(ts_obj)
pacf(ts_obj)
library("tseries")
?summary
q()
library(knitr)
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
data(mtcars)
pairs(mtcars)
library(shinyapps)
setwd("C:/Misc/R_work/Shiny/Submission/")
deployApp()
shinyapps::setAccountInfo(name='shwetalekh', token='E3B020C3A84F379BD4C4C95CE1780C3F', secret='4xOOPp9X2diGWGvq1nwvkXI++zCF+mlTmTL8CsWO')
deployApp()
?deployApp
deployApp(account="shwetalekh")
runApp()
library(shiny)
runApp()
library(shiny)
deployApp(account="shwetalekh")
deployApp(account="shwetalekh")
time
time()
date()
setwd("C:/Misc/R_work/Shiny/Submission/")
runApp()
setwd("C:/Misc/R_work/Slidify/Submission")
library(knitr)
slidify('index.')
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
slidify('index.Rmd')
runApp()
setwd("C:/Misc/R_work/Shiny/Submission/")
runApp()
setwd("C:/Misc/R_work/Slidify/Submission")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
setwd("C:/Misc/R_work/Shiny/Submission/")
runApp()
publish(user="itwizalekh", repo="SlidifySubmission")
setwd("C:/Misc/R_work/Slidify/Submission")
publish(user="itwizalekh", repo="SlidifySubmission")
setwd("C:/Users/Alekh/Documents/GitHub/SlidifySubmission")
library(slidify)
publish(user="itwizalekh", repo="SlidifySubmission")
